//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BisConnectivityServices.BisMessageHttpActionServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class CallContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Infolog", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Infolog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BisConnectivityServices.BisMessageHttpActionServiceReference.InfologEntry[] EntriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BisConnectivityServices.BisMessageHttpActionServiceReference.InfologEntry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologEntry", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class InfologEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BisConnectivityServices.BisMessageHttpActionServiceReference.InfologType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BisConnectivityServices.BisMessageHttpActionServiceReference.InfologType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologType", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    public enum InfologType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Fault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="www.toincrease.com", ConfigurationName="BisMessageHttpActionServiceReference.BisMessageStartFromHttp")]
    public interface BisMessageStartFromHttp {
        
        // CODEGEN: Generating message contract since message executeMessage has headers
        [System.ServiceModel.OperationContractAttribute(Action="www.toincrease.com/BisMessageStartFromHttp/executeMessage", ReplyAction="www.toincrease.com/BisMessageStartFromHttp/executeMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BisConnectivityServices.BisMessageHttpActionServiceReference.Fault), Action="www.toincrease.com/BisMessageStartFromHttp/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageResponse executeMessage(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.toincrease.com/BisMessageStartFromHttp/executeMessage", ReplyAction="www.toincrease.com/BisMessageStartFromHttp/executeMessageResponse")]
        System.Threading.Tasks.Task<BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageResponse> executeMessageAsync(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage request);
        
        // CODEGEN: Generating message contract since message executeMessageGet has headers
        [System.ServiceModel.OperationContractAttribute(Action="www.toincrease.com/BisMessageStartFromHttp/executeMessageGet", ReplyAction="www.toincrease.com/BisMessageStartFromHttp/executeMessageGetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BisConnectivityServices.BisMessageHttpActionServiceReference.Fault), Action="www.toincrease.com/BisMessageStartFromHttp/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGetResponse executeMessageGet(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet request);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.toincrease.com/BisMessageStartFromHttp/executeMessageGet", ReplyAction="www.toincrease.com/BisMessageStartFromHttp/executeMessageGetResponse")]
        System.Threading.Tasks.Task<BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGetResponse> executeMessageGetAsync(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeMessage", WrapperNamespace="www.toincrease.com", IsWrapped=true)]
    public partial class executeMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.toincrease.com", Order=0)]
        public string content;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.toincrease.com", Order=1)]
        public string messageId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.toincrease.com", Order=2)]
        public string projectId;
        
        public executeMessage() {
        }
        
        public executeMessage(BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext, string content, string messageId, string projectId) {
            this.CallContext = CallContext;
            this.content = content;
            this.messageId = messageId;
            this.projectId = projectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeMessageResponse", WrapperNamespace="www.toincrease.com", IsWrapped=true)]
    public partial class executeMessageResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public BisConnectivityServices.BisMessageHttpActionServiceReference.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.toincrease.com", Order=0)]
        public string result;
        
        public executeMessageResponse() {
        }
        
        public executeMessageResponse(BisConnectivityServices.BisMessageHttpActionServiceReference.Infolog Infolog, string result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeMessageGet", WrapperNamespace="www.toincrease.com", IsWrapped=true)]
    public partial class executeMessageGet {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.toincrease.com", Order=0)]
        public string messageId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.toincrease.com", Order=1)]
        public string projectId;
        
        public executeMessageGet() {
        }
        
        public executeMessageGet(BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext, string messageId, string projectId) {
            this.CallContext = CallContext;
            this.messageId = messageId;
            this.projectId = projectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeMessageGetResponse", WrapperNamespace="www.toincrease.com", IsWrapped=true)]
    public partial class executeMessageGetResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public BisConnectivityServices.BisMessageHttpActionServiceReference.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.toincrease.com", Order=0)]
        public string result;
        
        public executeMessageGetResponse() {
        }
        
        public executeMessageGetResponse(BisConnectivityServices.BisMessageHttpActionServiceReference.Infolog Infolog, string result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BisMessageStartFromHttpChannel : BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BisMessageStartFromHttpClient : System.ServiceModel.ClientBase<BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp>, BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp {
        
        public BisMessageStartFromHttpClient() {
        }
        
        public BisMessageStartFromHttpClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BisMessageStartFromHttpClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BisMessageStartFromHttpClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BisMessageStartFromHttpClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageResponse BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp.executeMessage(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage request) {
            return base.Channel.executeMessage(request);
        }
        
        public BisConnectivityServices.BisMessageHttpActionServiceReference.Infolog executeMessage(BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext, string content, string messageId, string projectId, out string result) {
            BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage inValue = new BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage();
            inValue.CallContext = CallContext;
            inValue.content = content;
            inValue.messageId = messageId;
            inValue.projectId = projectId;
            BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageResponse retVal = ((BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp)(this)).executeMessage(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageResponse> BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp.executeMessageAsync(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage request) {
            return base.Channel.executeMessageAsync(request);
        }
        
        public System.Threading.Tasks.Task<BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageResponse> executeMessageAsync(BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext, string content, string messageId, string projectId) {
            BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage inValue = new BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessage();
            inValue.CallContext = CallContext;
            inValue.content = content;
            inValue.messageId = messageId;
            inValue.projectId = projectId;
            return ((BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp)(this)).executeMessageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGetResponse BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp.executeMessageGet(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet request) {
            return base.Channel.executeMessageGet(request);
        }
        
        public BisConnectivityServices.BisMessageHttpActionServiceReference.Infolog executeMessageGet(BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext, string messageId, string projectId, out string result) {
            BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet inValue = new BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet();
            inValue.CallContext = CallContext;
            inValue.messageId = messageId;
            inValue.projectId = projectId;
            BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGetResponse retVal = ((BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp)(this)).executeMessageGet(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGetResponse> BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp.executeMessageGetAsync(BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet request) {
            return base.Channel.executeMessageGetAsync(request);
        }
        
        public System.Threading.Tasks.Task<BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGetResponse> executeMessageGetAsync(BisConnectivityServices.BisMessageHttpActionServiceReference.CallContext CallContext, string messageId, string projectId) {
            BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet inValue = new BisConnectivityServices.BisMessageHttpActionServiceReference.executeMessageGet();
            inValue.CallContext = CallContext;
            inValue.messageId = messageId;
            inValue.projectId = projectId;
            return ((BisConnectivityServices.BisMessageHttpActionServiceReference.BisMessageStartFromHttp)(this)).executeMessageGetAsync(inValue);
        }
    }
}
